pom.xml

<dependencies>
    <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-java</artifactId>
        <version>4.8.0</version>
    </dependency>
    <dependency>
        <groupId>org.testng</groupId>
        <artifactId>testng</artifactId>
        <version>7.7.0</version>
        <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.11.0</version>
    </dependency>
</dependencies>


Java Kodları (Selenium WebDriver Testi)
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.testng.Assert;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import java.util.List;

public class TestAutomation {

    WebDriver driver;

    @BeforeMethod
    public void setUp() {
        // WebDriver'ı başlatma
        System.setProperty("webdriver.chrome.driver", "path_to_your_chromedriver");
        ChromeOptions options = new ChromeOptions();
        options.addArguments("--headless"); // Tarayıcıyı arka planda çalıştırır (isteğe bağlı)
        driver = new ChromeDriver(options);
    }

    @Test
    public void testProductSearchAndAddToCart() {
        // Test senaryosuna göre siteyi ziyaret et
        driver.get("https://testcase.myideasoft.com/");

        // Arama kutusuna 'ürün' yaz ve arama butonuna tıkla
        WebElement searchBox = driver.findElement(By.name("search"));
        searchBox.sendKeys("ürün");
        WebElement searchButton = driver.findElement(By.cssSelector("button[type='submit']"));
        searchButton.click();

        // Ürünlerin listelendiğini doğrula
        List<WebElement> productList = driver.findElements(By.cssSelector(".product-thumb"));
        Assert.assertTrue(productList.size() > 0, "Ürünler listelenmedi!");

        // İlk ürüne tıkla ve detay sayfasına git
        WebElement firstProduct = productList.get(0);
        firstProduct.click();

        // Ürünü sepete ekle
        WebElement addToCartButton = driver.findElement(By.id("button-cart"));
        addToCartButton.click();

        // "SEPETİNİZE EKLENMİŞTİR" mesajının görünmesini kontrol et
        WebElement successMessage = driver.findElement(By.cssSelector(".alert.alert-success"));
        Assert.assertTrue(successMessage.getText().contains("SEPETİNİZE EKLENMİŞTİR"), "Ürün sepete eklenmedi!");

        // Sepet sayfasına git
        WebElement cartButton = driver.findElement(By.id("cart"));
        cartButton.click();

        // Sepet içeriğini kontrol et
        WebElement cartItemQuantity = driver.findElement(By.cssSelector(".cart-info .quantity"));
        Assert.assertEquals(cartItemQuantity.getText(), "5", "Sepetteki ürün sayısı 5 değil!");

        // Sepet sayfasında doğru ürün ve miktarın olduğunu kontrol et
        List<WebElement> cartItems = driver.findElements(By.cssSelector(".cart-item"));
        boolean isProductInCart = false;
        for (WebElement item : cartItems) {
            if (item.getText().contains("ürün")) {
                isProductInCart = true;
                break;
            }
        }
        Assert.assertTrue(isProductInCart, "Sepette ürün bulunamadı!");
    }

    @AfterMethod
    public void tearDown() {
        // Test sonrası tarayıcıyı kapat
        if (driver != null) {
            driver.quit();
        }
    }
}


Not: Kod olarak otomasyon yazma tecrübesine sahip değilim. Başlangıç seviyesinde çalışma prensiplerine ve kullanımına hakimim. RPA uygulaması ile otomasyon senaryoları yazabilmektedir.Yukarıdaki kodlar yapay zekaya tarafımdan yazdırılmıştır.
